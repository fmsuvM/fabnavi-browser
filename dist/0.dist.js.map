{"version":3,"sources":["webpack:///./src/renderer/components/ProjectDetail/ProjectCard.js","webpack:///./src/renderer/components/ProjectDetail/RelatedProjects.js","webpack:///./src/renderer/stylesheets/application/ProjectShow/RelatedProjects.js"],"names":["debug","ProjectCard","props","toProjectDetail","id","project","projectType","content","type","split","isPrivate","private","index","thumbnail","name","description","userIcon","user","nickname","assetsPath","React","Component","propTypes","PropTypes","arrayOf","object","selectMenuItem","func","toggleMenu","selectedId","number","mapDispatchToProps","dispatch","projectId","RelatedProjects","_projects","projects","tag","checkProjects","Object","keys","length","projectList","map","string","ProjectFrame","styled","div"],"mappings":"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","file":"0.dist.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Debug from 'debug';\nimport { connect } from 'react-redux';\nimport { push } from 'react-router-redux';\n\nconst debug = Debug('fabnavi:RelatedProjects:ProjectCard');\nimport { assetsPath } from '../../utils/assetsUtils';\n\nimport {\n  ProjectFrame,\n  InsideFrame,\n  ProjectThumb,\n  ProjectTitle,\n  ProjectDescription,\n  StatusFrame,\n  ProjectUser,\n  UserStatusFrame,\n  ProjectDate,\n  UserName,\n  ProjectMenu,\n  MenuColmun,\n  PrivateLabel,\n  ProjectTypeLabel,\n  CardProjectTypeLabel\n} from '../../stylesheets/application/ProjectIndex/StyledProjectCard';\nimport { sanitizeProject } from '../../utils/projectUtils';\n\nexport class ProjectCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.toProjectDetail = () => {\n      this.props.toProjectDetail(this.props.id);\n    };\n  }\n\n  render() {\n    const project = sanitizeProject(this.props.project);\n    const projectType = typeof project.content[0] === 'undefined' ? 'Photo' : project.content[0].type.split('::')[1];\n    const isPrivate = project.private;\n\n    return (\n      <div>\n        <ProjectFrame onClick={this.toProjectDetail} index={this.props.index}>\n          <ProjectThumb>\n            <img src={project.thumbnail} />\n          </ProjectThumb>\n          <InsideFrame>\n            <ProjectTitle lang=\"ja\">{project.name}</ProjectTitle>\n            {project.description === '' ? (\n              <ProjectDescription />\n            ) : (\n              <ProjectDescription>{project.description}</ProjectDescription>\n            )}\n            <StatusFrame>\n              <ProjectUser src={project.userIcon} user={true} />\n              <UserName>{project.user.nickname}</UserName>\n              <CardProjectTypeLabel type={projectType} />\n            </StatusFrame>\n          </InsideFrame>\n          {isPrivate && <PrivateLabel src={`${assetsPath}/images/PrivateLabel.png`} />}\n          <ProjectTypeLabel type={projectType} />\n        </ProjectFrame>\n      </div>\n    );\n  }\n}\n\nProjectCard.propTypes = {\n  content: PropTypes.arrayOf(PropTypes.object),\n  selectMenuItem: PropTypes.func,\n  toggleMenu: PropTypes.func,\n  selectedId: PropTypes.number,\n  toProjectDetail: PropTypes.func,\n  index: PropTypes.number,\n  project: PropTypes.object,\n  id: PropTypes.number\n};\n\nconst mapDispatchToProps = dispatch => ({\n  toProjectDetail: projectId => {\n    dispatch(push(`/detail/${projectId}`));\n  }\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(ProjectCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Debug from 'debug';\n\nimport ProjectCard from './ProjectCard';\nimport { ProjectFrame } from '../../stylesheets/application/ProjectShow/RelatedProjects';\n\nconst debug = Debug('fabnavi:componens:RelatedProjects');\n\nclass RelatedProjects extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const _projects = this.props.projects;\n    const tag = this.props.tag;\n    const projects = _projects[tag];\n    const checkProjects = !Object.keys(_projects).length;\n    const projectList = checkProjects ? (\n      <div>Now Loading ...</div>\n    ) : (\n      projects.map((content, index) => <ProjectCard project={content} key={index} id={content.id} />)\n    );\n    return <ProjectFrame>{projectList}</ProjectFrame>;\n  }\n}\n\nRelatedProjects.propTypes = {\n  projects: PropTypes.object,\n  tag: PropTypes.string\n};\n\nexport default connect(\n  null,\n  null\n)(RelatedProjects);\n","import styled, { css } from 'styled-components';\n\nexport const ProjectFrame = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  overflow-x: scroll;\n`;\n"],"sourceRoot":""}